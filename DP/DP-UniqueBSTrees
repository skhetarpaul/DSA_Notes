https://leetcode.com/problems/unique-binary-search-trees/description/

class Solution:
    def numTrees(self, n: int) -> int:
        # dp = [-1 for i in range(n+1)]

        '''
        def solve(x):
            if x<=1:
                return 1
            elif dp[x]!=-1:
                return dp[x]
            else:
                ans = 0
                for i in range(1, x+1):
                    ans+=solve(i-1)*solve(x-i)
                dp[x] = ans
                return ans
        return solve(n)
        '''
        def Tabulation():
            dp = [-1 for i in range(n+1)]
            for i in range(n+1):
                if i<=1:
                    dp[i] = 1
                else:
                    ans = 0
                    for j in range(1,i+1):
                        ans+=dp[j-1]*dp[i-j]
                    dp[i] = ans
            return dp[n]
        return Tabulation()


